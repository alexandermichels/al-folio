---
---
@inproceedings{PadmanabhanSpatialAPI2021,
    abbr = {SpatialAPI},
    abbr1 = {SIGSPATIAL},
    author = {Padmanabhan, Anand and Xiao, Zimo and Vandewalle, Rebecca and Baig, Furqan and Michels, Alexander and Li, Zhiyu and Wang, Shaowen},
    title = {CyberGIS-Compute for Enabling Computationally Intensive Geospatial Research},
    year = 2021,
    month = {Nov},
    booktitle = {SpatialAPI'21: Proceedings of the 3rd ACM SIGSPATIAL International Workshop on APIs and Libraries for Geospatial Data Science},
    doi = {https://doi.org/10.1145/3486189.3490017},
    abstract = {{In this tutorial, we will first start with the basics of CyberGISJupyter and CyberGIS-Compute, then introduce the Python SDK for CyberGIS-Compute with a simple Hello World example. Then, we will take multiple real-world geospatial applications use-cases like spatial accessibility and wildfire evacuation simulation using agent based modeling. We will also provide pointers on how to contribute applications to the CyberGIS-Compute framework.}},
    selected = {true},
    cybergisx = {true}
}

@inproceedings{MichelsGateways2021,
  abbr         = {Gateways},
  author       = {Michels, Alexander and Padmanabhan, Anand and Li, Zhiyu and Wang, Shaowen},
  title        = {{Towards Reproducible Research on CyberGISX with Lmod and Easybuild}},
  year         = 2021,
  publisher    = {Zenodo},
  booktitle    = {Proceedings of Gateways 2021},
  month        = {Oct},
  doi          = {https://doi.org/10.5281/zenodo.5569659},
  url          = {https://doi.org/10.5281/zenodo.5569659},
  abstract     = {JupyterHub [1] has become a popular choice in many scientific communities, offering an easy-to-use interface for users with little to no frontend development work while promoting reproducible and replicable (R&R) science [2]. In the broad geospatial science community, CyberGISX [3] provides such a gateway environment with many cyberGIS (i.e., geospatial information science and systems based on advanced cyberinfrastructure) and geospatial software packages prebuilt and ready to use. Like other JupyterHub-based solutions, CyberGISX also provides container-based access for its users and must balance a trade-off between providing a static compute environment which enhances R&R and continuously updating the software environment to keep up with advances in scientific software. Solutions such as Binder [4] have attempted to address this trade-off by having required dependencies encoded in the package and building the software environment at the time of use. However, such a solution comes with two major disadvantages: (a) software is built at the time it is needed, increasing startup time and introducing the possibility that some of the dependencies of the environment are no longer available or have changed; and (b) the onus of specifying and managing software installations is passed to notebook developers, many of whom are domain scientists and not comfortable with such responsibilities. To address these challenges and enhance R&R with minimal effort from end-users, we have designed and implemented a solution on CyberGISX that allows software to be kept on an external file server mounted into each user's environment. Scientific software is installed with Easybuild [5] and managed by Lmod [6] giving a variety of benefits: (1) the compute environment is more standardized and easily reproducible outside of the gateway; (2) multiple versions of software can be made available to users without increasing container size; and (3) the exact copies of software are always available on the gateway instead of being rebuilt for every release, further enhancing R&R. We also employ an Easybuild-installed Anaconda [7] to create and manage conda environments on the file server. The combination of the software stack from Easybuild and Python environment from conda provides end-users with kernels for their Jupyter notebooks which are persistent and unchanged as the gateway's container updates. This design enhances R&R and adds functionality for advanced users without introducing technical barriers to non-technical end-users. As such, domain scientists using this solution need not build their own software and specify dependencies, which helps prevent the notebooks they have developed from getting broken by the next software release. This talk explores the new architecture and applications of this solution to CyberGISX [3] and CyberGIS-Jupyter for Water (CJW) [8].},
  selected     = {true},
  cybergisx    = {true}
}

@inproceedings{PadmanabhanGateways2021,
  abbr         = {Gateways},
  author       = {Padmanabhan, Anand and Xiao, Zimo and Vandewalle, Rebecca and Michels, Alexander and Wang, Shaowen},
  title        = {{Enabling Computationally Intensive Geospatial Research on CyberGIS-Jupyter with CyberGIS-Compute}},
  year         = 2021,
  publisher    = {Zenodo},
  booktitle    = {Proceedings of Gateways 2021},
  month        = {Oct},
  doi          = {https://doi.org/10.5281/zenodo.5570056},
  url          = {https://doi.org/10.5281/zenodo.5570056},
  abstract     = {{Geospatial research and education have become increasingly dependent on cyberGIS, defined as geographic information science and systems based on advanced cyberinfrastructure (CI), [1] to tackle computation and data challenges. However, the use of advanced cyberGIS capabilities has typically been constrained to a small set of research groups who have the technical expertise of using CI resources. Over the past few years CyberGIS-Jupyter [2,3] has been developed to provide access to cyberGIS capabilities through an easy-to-use Jupyter Notebook interface which has made cyberGIS more accessible. For many cyberGIS and geospatial applications accessing CI resources needed for solving complex problems at scale. However, leveraging CI resources for geospatial application is challenging both due to the steep learning curve and lack of appropriate tools. CyberGIS-Compute fills this gap by providing an easy-to-use middleware tool for using and contributing geospatial application codes that leverage CI resources. This substantially lowers the learning curve for both geospatial users and developers to access cyberGIS capabilities at scale. CyberGIS-Compute is backed by Virtual ROGER (Resourcing Open Geospatial Education and Research); a geospatial supercomputer with access to a number of readily available popular geospatial libraries.

With CyberGIS-Compute we have designed an easy-to-use middleware and associated Python SDK to provide access to CyberGIS capabilities, allowing geospatial applications to easily scale and employ advanced cyberinfrastructure resources. This presentation will first describe the basics of CyberGIS-Jupyter and CyberGIS-Compute, then introduce the Python SDK for CyberGIS-Compute with a simple example. Then, we will take multiple real-world geospatial applications use-cases like spatial accessibility and wildfire evacuation simulation using agent based modeling. Lastly, we will also descrive mechanism to contribute applications to the CyberGIS-Compute framework.}},
  cybergisx    = {true},
}

@article{Kang2021.09.03,
	abbr = {TGIS},
	author = {Kang, Jeon-Young and Michels, Alexander and Crooks, Andrew and Aldstadt, Jared and Wang, Shaowen},
	title = {An Integrated Framework of Global Sensitivity Analysis and Calibration for Spatially Explicit Agent-Based Models},
	journal = {Transactions in GIS},
	year = {2021},
	volume = {Early View},
	number = {n/a},
	pages = {},
	doi = {https://doi.org/10.1111/tgis.12837},
	url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/tgis.12837},
	eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1111/tgis.12837},
	abstract = {Calibration of agent-based models (ABMs) is a major challenge due to the complex nature of the systems being modeled, the heterogeneous nature of geographical regions, the varying effects of model inputs on the outputs, and computational intensity. Nevertheless, ABMs need to be carefully tuned to achieve the desirable goal of simulating spatiotemporal phenomena of interest, and a well-calibrated model is expected to achieve an improved understanding of the phenomena. To address some of the above challenges, this article proposes an integrated framework of global sensitivity analysis (GSA) and calibration, called GSA-CAL. Specifically, variance-based GSA is applied to identify input parameters with less influence on differences between simulated outputs and observations. By dropping these less influential input parameters in the calibration process, this research reduces the computational intensity of calibration. Since GSA requires many simulation runs, due to ABMs' stochasticity, we leverage the high-performance computing power provided by the advanced cyberinfrastructure. A spatially explicit ABM of influenza transmission is used as the case study to demonstrate the utility of the framework. Leveraging GSA, we were able to exclude less influential parameters in the model calibration process and demonstrate the importance of revising local settings for an epidemic pattern in an outbreak.},
	selected = {true}
}

@inproceedings{MichelsSIGSPATIAL20,
    abbr = {GeoSim},
	abbr1 = {SIGSPATIAL},
	author = {Michels, Alexander and Kang, Jeon-Young and Wang, Shaowen},
	title = {An Exploration of the Effect of Buyer Preference and Market Composition on the Rent Gradient Using the ALMA Framework},
	year = {2020},
	isbn = {9781450381611},
	publisher = {Association for Computing Machinery},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3423335.3428167},
	doi = {https://doi.org/10.1145/3423335.3428167},
	abstract = {Urban land markets exhibit complex emergent behaviors that have yet to be fully explained by the microeconomic decision-making which constitutes the market. The Agent-based Land MArket (ALMA) framework has been introduced to simulate a bilateral agent-based land market that produces a rent gradient. In this paper, we extend the ALMA framework by introducing two new parameters, heterogeneity, and stochasticity which allow us to explore how the rent gradient is affected by buyers with diverse preferences and a range of market compositions.},
	booktitle = {Proceedings of the 3rd ACM SIGSPATIAL International Workshop on GeoSpatial Simulation},
	pages = {48–51},
	numpages = {4},
	keywords = {agent-based modeling, spatial simulation, land markets},
	location = {Seattle, Washington},
	series = {GeoSim '20},
	code = {https://github.com/cybergis/ALMANotebook}
}


@article{Kang2020.05.06.20093534,
	abbr = {IJHG},
	author = {Kang, Jeon-Young and Michels, Alexander C and Lyu, Fangzheng and Wang, Shaohua and Agbodo, Nelson and Freeman, Vincent L and Wang, Shaowen},
	title = {Rapidly Measuring Spatial Accessibility of COVID-19 Healthcare Resources: A Case Study of Illinois, USA},
	year = {2020},
  	abstract = {The severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2), causing the coronavirus disease 2019 (COVID-19) pandemic, has infected millions of people and caused hundreds of thousands of deaths. While COVID-19 has overwhelmed healthcare resources (e.g., healthcare personnel, testing resources, hospital beds, and ventilators) in a number of countries, limited research has been conducted to understand spatial accessibility of such resources. This study fills this gap by rapidly measuring the spatial accessibility of COVID-19 healthcare resources with a particular focus on Illinois, USA. Specifically, the rapid measurement is achieved by resolving computational intensity of an enhanced two-step floating catchment area (E2SFCA) method through a parallel computing strategy based on cyberGIS (cyber geographic information science and systems). The study compared the spatial accessibility measures for COVID-19 patients to those of general population, identifying which geographic areas need additional healthcare resources to improve access. The results also help delineate the areas that may face a COVID-19-induced shortage of healthcare resources caused by COVID-19. The Chicagoland, particularly the southern Chicago, shows an additional need for resources. Our findings are relevant for policymakers and public health practitioners to allocate existing healthcare resources or distribute new resources for maximum access to health services.},
	journal = {International Journal of Health Geographics},
  	doi = {https://doi.org/10.1186/s12942-020-00229-x},
	code = {https://github.com/cybergis/COVID-19AccessibilityNotebook}
}


@inproceedings{KangSIGSPATIAL19,
    abbr = {GeoSim},
	abbr1 = {SIGSPATIAL},
	author = {Kang, Jeon-Young and Aldstadt, Jared and Michels, Alexander C. and Vandewalle, Rebecca and Wang, Shaowen},
	title = {CyberGIS-Jupyter for Spatially Explicit Agent-based Modeling: A Case Study on Influenza Transmission},
	booktitle = {GeoSim '19: Proceedings of the 2nd ACM SIGSPATIAL International Workshop on GeoSpatial Simulation},
	abstract = {Despite extensive efforts on achieving reproducible agent-based models (ABMs) to improve the capability of this widely adopted methodology, it remains challenging to reproduce and replicate pre-existing ABMs, due to a number of factors such as diverse computing resources and ABMs platforms. In this study, we propose to employ CyberGIS-Jupyter for spatially explicit ABMs. CyberGIS-Jupyter is a cyberGIS framework to achieve data-intensive, reproducible, and scalable geospatial analytics using Jupyter Notebook based on advanced cyberinfrastructure. Influenza transmission in the city of Miami, Florida, USA was used as a case study. In the model, Influenza is transmitted through the contact networks of individual human agents, which are constructed based on commuting behaviors. CyberGIS-Jupyter can support one not only to conduct collaborative and transparent modeling, but also to perform modeling simulation on advanced cyberinfrastructure resources. It may contribute to boosting the reproducibility and replicability of ABMs.},
	editor = {Kavak, Hamdi and Kim, Joon-Seok and Wise, Sarah},
	year = {2019},
	isbn = {978-1-4503-6956-5},
	location = {Chicago, Illinois},
	publisher = {ACM},
	address = {New York, NY, USA},
	pages = {32--35},
	doi = {https://doi.org/10.1145/3356470.3365531},
    cybergisx = {true}
}